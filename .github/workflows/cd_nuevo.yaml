name: CD convertido

on:
  push:
    branches: [ main ]
    paths: [ "hangman-api/**" ]
  pull_request:
    branches: [ main ]
    paths: [ "hangman-api/**" ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: hangman-api/package-lock.json
      - name: build
        working-directory: ./hangman-api
        run: |
          npm ci
          npm run build --if-present
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: test
        working-directory: ./hangman-api
        run: |
          npm ci
          npm test
  
  integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hangman_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Create database relationship & Integration Test
        working-directory: ./hangman-api
        env:
          DATABASE_PORT: 5432
          DATABASE_HOST: localhost
          DATABASE_NAME: hangman_db
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_POOL_MIN: 2
          DATABASE_POOL_MAX: 10
        run: |
          npm ci
          npx knex migrate:latest --env development
          npm run test:integration
      # - name: Integration-test
      #   working-directory: ./hangman-api
      #   run: docker compose -f test-integration.yaml up --force-recreate --exit-code-from build-bd-relationships

# name: CD_workflow

# on:
#   push:
#     branches: [ main ]
#     paths: [ "hangman-api/**" ]
#   pull_request:
#     branches: [ main ]
#     paths: [ "hangman-api/**" ]
#   workflow_dispatch:
    
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Setup Node.js version
#         uses: actions/setup-node@v4
#         with:
#           node-version: 16
#           cache: 'npm'
#           cache-dependency-path: hangman-api/package-lock.json
#       - name: build
#         working-directory: ./hangman-api
#         run: |
#           npm ci
#           npm run build --if-present
#       - name: Upload artifact (dist folfer)
#         uses: actions/upload-artifact@v4
#         with:
#           name: build-code
#           path: hangman-api/dist/
#   delivery:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Download artifact (dist folder)
#         uses: actions/download-artifact
#         with:
#           name: build-code
#           path: hangman-api/dist/
#       - name: Build Docker image
#         working-directory: ./hangman-api
#         run: docker build -t hangman-api-2024:$(date +%s) -f Dockerfile.workflow .